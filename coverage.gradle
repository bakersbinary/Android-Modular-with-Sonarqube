apply plugin: 'jacoco'

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task coverageReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
//        csv.enabled = false
//        xml.enabled = true
//        html {
//            enabled = true
//            destination file("${buildDir}/coverage-report")
//        }
    }
    // Change as needed
    def fileFilter = [
            '**/*App.*',
            '**/*Application.*',
            '**/*Activity.*',
            '**/*Fragment.*',
            '**/*JsonAdapter.*', // adapters generated by Moshi
            '**/di/**',
            '**/*Dagger.*'
    ]
    def debugTree = fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: fileFilter
    )
    def mainSrc = "$projectDir/src/main/java"
    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(
            dir: project.buildDir,
            includes: [
                    'jacoco/testReleaseUnitTest.exec',
                    'outputs/code-coverage/connected/*coverage.ec'
            ]
    )
}